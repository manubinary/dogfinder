{"version":3,"sources":["components/Home.js","reportWebVitals.js","index.js"],"names":["Home","useState","breedList","setBreedList","selectedBreed","setSelectedBreed","subBreedList","setSubBreedList","selectedSubBreed","setSelectedSubBreed","numberOfImages","setNumberOfImages","images","setImages","breedSelected","setBreedSelected","subBreedSelected","setSubBreedSelected","numberSelected","setNumberSelected","useEffect","fetch","then","response","json","responseJson","console","log","message","catch","error","loadSubBreed","breed","status","loadImages","length","URL","className","Row","Col","content","breedListArranged","subBreedListArranged","Object","keys","map","key","push","value","charAt","toUpperCase","slice","label","numbers","index","classNameBreed","style","borderColor","onChange","e","target","classNameSubBreed","Math","random","classNameNumber","Button","variant","onClick","getContent","result","forEach","item","src","alt","getImages","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Switch","Route","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.d08f1e04.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport './Home.css';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nfunction Home() {\r\n  const [breedList, setBreedList] = useState([]);\r\n  const [selectedBreed, setSelectedBreed] = useState('');\r\n  const [subBreedList, setSubBreedList] = useState([]);\r\n  const [selectedSubBreed, setSelectedSubBreed] = useState('');\r\n  const [numberOfImages, setNumberOfImages] = useState(0);\r\n  const [images, setImages] = useState([]);\r\n  const [breedSelected, setBreedSelected] = useState(true);\r\n  const [subBreedSelected, setSubBreedSelected] = useState(true);\r\n  const [numberSelected, setNumberSelected] = useState(true);\r\n\r\n  useEffect(()=> {\r\n      return fetch('https://dog.ceo/api/breeds/list/all')\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n          console.log(responseJson);\r\n          setBreedList(responseJson.message);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const getContent = () => {\r\n    const content = [];\r\n    const breedListArranged = [];\r\n    const subBreedListArranged = [];\r\n    if(breedList) {\r\n      Object.keys(breedList).map((key) => {\r\n        breedListArranged.push (<option value={key}>{key.charAt(0).toUpperCase() + key.slice(1)}</option>);\r\n      });\r\n    }\r\n    if(subBreedList) {\r\n      (subBreedList).map((key) => {\r\n        subBreedListArranged.push ({value : key, label: key.charAt(0).toUpperCase() + key.slice(1)});\r\n      });\r\n    }\r\n    const numbers = [];\r\n    for(let index=1; index<15; index++) {\r\n      numbers.push(<option value={index}>{index}</option>);\r\n    }\r\n    const classNameBreed = breedSelected ? \"selectNode selectElement\" : \"selectNode selectElement alertColor\";\r\n    content.push(\r\n      <div className=\"selectContainer\">\r\n        <span>Breed</span>\r\n        <select className={classNameBreed} style={{borderColor: breedSelected ? \"\" : \"alertColor\" }} onChange={(e)=>{loadSubBreed(e.target.value)}}>\r\n          <option value=\"\">Selelct</option>\r\n          {Object.keys(breedList).map((key) => (\r\n           <option value={key}>{key.charAt(0).toUpperCase() + key.slice(1)}</option>\r\n          ))}\r\n        </select>\r\n      </div>);\r\n    const classNameSubBreed = subBreedSelected ? \"selectNode selectElement\" : \"selectNode selectElement alertColor\";\r\n    (subBreedList && subBreedList.length > 0) && content.push(\r\n      <div className=\"selectContainer\">\r\n        <span>Sub breed</span>\r\n          <select key={Math.random} className={classNameSubBreed}  onChange={(e)=>{setSelectedSubBreed(e.target.value); setSubBreedSelected(true);}}>\r\n          <option value=\"\">Selelct</option>\r\n          {(subBreedList).map((key) => (\r\n            <option value={key}>{key.charAt(0).toUpperCase() + key.slice(1)}</option>\r\n          ))}\r\n          </select>\r\n      </div>);\r\n    const classNameNumber = numberSelected ? \"selectNode selectElement\" : \"selectNode selectElement alertColor\";\r\n    content.push(\r\n      <div className=\"selectContainer\">\r\n        <span>Number Of Images</span>\r\n        <select className={classNameNumber} onChange={(e)=>{setNumberOfImages(e.target.value); setNumberSelected(true);}}>\r\n        <option value=\"\">Selelct</option>\r\n        {numbers}\r\n        </select>\r\n      </div>);\r\n    content.push(<div className=\"buttonContainer\"><span></span><Button variant={numberOfImages == 0 ? \"secondary\" : \"primary\"} onClick ={()=>loadImages()}>View Images</Button></div>);\r\n    return(content);\r\n  };\r\n\r\n\r\n  const loadSubBreed = (breed) => {\r\n    setSelectedBreed(breed);\r\n    setSubBreedList([]);\r\n    setSelectedSubBreed('');\r\n    setImages([]);\r\n    setNumberOfImages(0);\r\n    breed ? setBreedSelected(true) : setBreedSelected(false);\r\n    return fetch('https://dog.ceo/api/breed/'+ breed +'/list')\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        if (responseJson.status === \"success\") {\r\n          setSubBreedList(responseJson.message);\r\n        } else {\r\n          setSubBreedList([]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n    });\r\n  };\r\n\r\n  const loadImages = () => {\r\n    selectedBreed ? setBreedSelected(true) : setBreedSelected(false);\r\n    (subBreedList.length > 0 && selectedSubBreed ) ? setSubBreedSelected(true) : setSubBreedSelected(false);\r\n    numberOfImages ? setNumberSelected(true) : setNumberSelected(false);\r\n    let URL = 'https://dog.ceo/api/breed/' +selectedBreed+ '/images/random/' + numberOfImages;\r\n    if (selectedSubBreed) {\r\n      URL = 'https://dog.ceo/api/breed/' + selectedBreed + '/' + selectedSubBreed + '/images/random/' + numberOfImages;\r\n    }\r\n    if  (selectedBreed || selectedSubBreed) {\r\n      return fetch(URL)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        if (responseJson.status === \"success\") {\r\n          setImages(responseJson.message);\r\n        } else {\r\n          setImages([]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    }\r\n  }\r\n\r\n const getImages = () => {\r\n    const result = [];\r\n    if (images && images.length > 0) {\r\n      images.forEach((item) => {\r\n        result.push(<img className=\"image\" src={item} alt=\"new\" />);\r\n      });\r\n    }\r\n    return result;\r\n };\r\n\r\n  return(\r\n    <div className=\"mainHome\">\r\n      <Row className=\"mainHeader\">\r\n        <Col className=\"header\">\r\n          <h1>Find Dog Details</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"content\">\r\n          {getContent()}\r\n          <div className=\"imageContainer\">{(images && images.length > 0) &&  getImages()}</div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './components/Home';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router , Route, Switch} from 'react-router-dom';\n\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route path=\"/\" component={Home} />\n    </Switch>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}